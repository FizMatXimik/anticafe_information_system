# Generated by Django 3.2.7 on 2021-11-08 22:28

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=100, verbose_name='Адрес')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='URL')),
                ('phone', models.CharField(max_length=20, verbose_name='Телефон')),
                ('registration_date', models.DateField(auto_now_add=True, verbose_name='Дата регистрации')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Заведение',
                'verbose_name_plural': 'Заведения',
                'ordering': ['address'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Clients',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fio', models.CharField(max_length=100, verbose_name='ФИО')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='URL')),
                ('birth_date', models.DateField(blank=True, verbose_name='Дата рождения')),
                ('address', models.CharField(blank=True, max_length=100, verbose_name='Домашний адрес')),
                ('phone', models.CharField(max_length=20, verbose_name='Телефон')),
                ('e_mail', models.CharField(blank=True, max_length=100, verbose_name='E-mail')),
                ('photo', models.ImageField(null=True, upload_to='photos/%Y/%m/%d/')),
                ('registration_date', models.DateField(auto_now_add=True, verbose_name='Дата регистрации')),
                ('activity_indicator', models.IntegerField(default=1, verbose_name='Показатель активности')),
            ],
            options={
                'verbose_name': 'Клиент',
                'verbose_name_plural': 'Клиенты',
                'ordering': ['fio'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Events',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='Наименование')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='URL')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('date_time_of_event', models.DateTimeField(verbose_name='Дата регистрации')),
                ('max_num_of_participants', models.IntegerField(default=99, verbose_name='Максимальное кол-во участников')),
                ('current_num_of_participants', models.IntegerField(default=0, verbose_name='Текущее кол-во участников')),
                ('price', models.FloatField(default=0.0, verbose_name='Цена')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.branch', verbose_name='Заведение')),
            ],
            options={
                'verbose_name': 'Мероприятие',
                'verbose_name_plural': 'Мероприятия',
                'ordering': ['name'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='GoodsAndServices',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='Наименование')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='URL')),
                ('group', models.CharField(blank=True, max_length=100, verbose_name='Группа')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('remaining_quantity', models.IntegerField(verbose_name='Осталось')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.branch', verbose_name='Заведение')),
            ],
            options={
                'verbose_name': 'Товар/Услуга',
                'verbose_name_plural': 'Товары и Услуги',
                'ordering': ['name'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Reservations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_time_of_reservation', models.DateTimeField(verbose_name='Дата и время бронирования')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='URL')),
                ('client_name', models.CharField(max_length=100, verbose_name='Имя клиента')),
                ('object_of_reservation', models.CharField(max_length=100, verbose_name='Объект бронирования')),
                ('table_num', models.IntegerField(null=True, verbose_name='Номер стола')),
                ('num_of_persons', models.IntegerField(default=0, verbose_name='Кол-во человек')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.branch', verbose_name='Заведение')),
                ('event', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='main.events', verbose_name='Мероприятие')),
            ],
            options={
                'verbose_name': 'Бронирование',
                'verbose_name_plural': 'Бронирования',
                'ordering': ['date_time_of_reservation', 'client_name'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Suppliers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fio', models.CharField(max_length=100, verbose_name='ФИО')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='URL')),
                ('inn', models.IntegerField(db_index=True, verbose_name='ИНН')),
                ('phone', models.CharField(max_length=20, verbose_name='Телефон')),
                ('e_mail', models.CharField(max_length=100, verbose_name='E-mail')),
                ('registration_date', models.DateField(auto_now_add=True, verbose_name='Дата регистрации')),
            ],
            options={
                'verbose_name': 'Поставщик',
                'verbose_name_plural': 'Поставщики',
                'ordering': ['fio'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Visits',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_visit', models.DateField(verbose_name='Дата посещения')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='URL')),
                ('goods_and_services', models.TextField(verbose_name='Купленные товары и услуги')),
                ('is_reserved', models.BooleanField(default=False, verbose_name='Зарезервировано')),
                ('time_start', models.TimeField(auto_now_add=True, verbose_name='Время начала посещения')),
                ('time_end', models.TimeField(null=True, verbose_name='Время окончания посещения')),
                ('payment_price', models.FloatField(null=True, verbose_name='Цена к оплате')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.branch', verbose_name='Заведение')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.clients', verbose_name='Клиент')),
                ('reservation', models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, to='main.reservations', verbose_name='Бронирование')),
            ],
            options={
                'verbose_name': 'Посещение',
                'verbose_name_plural': 'Посещения',
                'ordering': ['date_of_visit', 'client'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_name', models.CharField(max_length=100, verbose_name='Фамилия')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='URL')),
                ('first_name', models.CharField(max_length=100, verbose_name='Имя')),
                ('patronymic', models.CharField(max_length=100, verbose_name='Отчество')),
                ('birth_date', models.DateField(blank=True, verbose_name='Дата рождения')),
                ('address', models.CharField(blank=True, max_length=100, verbose_name='Домашний адрес')),
                ('phone', models.CharField(max_length=20, verbose_name='Телефон')),
                ('e_mail', models.CharField(blank=True, max_length=100, verbose_name='E-mail')),
                ('registration_date', models.DateField(auto_now_add=True, verbose_name='Дата принятия на работу')),
                ('num_of_employment_contract', models.IntegerField(null=True, verbose_name='Номер трудового договора')),
                ('duration_of_contract', models.CharField(max_length=100, verbose_name='Срок действия трудового договора')),
                ('salary', models.IntegerField(verbose_name='Оклад')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.branch', verbose_name='Заведение')),
            ],
            options={
                'verbose_name': 'Сотрудник',
                'verbose_name_plural': 'Сотрудники',
                'ordering': ['last_name', 'first_name'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PriceList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='URL')),
                ('price', models.FloatField(verbose_name='Цена')),
                ('good_or_service', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='main.goodsandservices', verbose_name='Товар/Услуга')),
            ],
            options={
                'verbose_name': 'Запись в прейскуранте с ценами',
                'verbose_name_plural': 'Записи прейскуранта с ценами',
                'ordering': ['good_or_service'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Contracts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='URL')),
                ('quantity', models.IntegerField(verbose_name='Количество поставляемых товаров/услуг')),
                ('price', models.FloatField(verbose_name='Цена')),
                ('delivery_schedule', models.TextField(blank=True, verbose_name='График поставки')),
                ('good_or_service', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='main.goodsandservices', verbose_name='Товар/Услуга')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.suppliers', verbose_name='Поставщик')),
            ],
            options={
                'verbose_name': 'Контракт',
                'verbose_name_plural': 'Контракты',
                'ordering': ['good_or_service', 'supplier'],
                'managed': True,
            },
        ),
    ]
